name: Run Serenity Tests

on:
  push:
    branches:
      - api-test-ravindu
      - ui-test-ravindu

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow write access to repository contents

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Make chromedriver executable
      - name: Make chromedriver executable
        run: chmod +x $(pwd)/src/test/resources/drivers/chromedriver

      - name: Install Chrome 131.0.6778.204
        run: |
            CHROME_VERSION=131.0.6778.204
            
            # Download Chrome binary
            curl -sSL https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chrome-linux64.zip -o chrome-linux64.zip
            unzip chrome-linux64.zip
            sudo mv chrome-linux64/chrome /usr/bin/google-chrome
          
            # Verify installation
            google-chrome --version
          

        # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

        # Start the API server on port 8080 using the JAR file in the resources folder
      - name: Start API server
        run: |
            nohup java -jar $(pwd)/src/test/resources/libs/demo-0.0.1-SNAPSHOT.jar --server.port=8080 &

      # Wait for the API to start
      - name: Wait for API to start
        run: sleep 15

      # Run Serenity tests
      - name: Run Serenity tests
        run: |
          mvn clean verify
        continue-on-error: true
          
#      # Upload Serenity reports as artifact
#      - name: Upload Serenity reports
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: serenity-reports
#          path: target/site/serenity
#
#      # Deploy Serenity Reports to GitHub Pages
#      - name: Deploy Serenity reports to GitHub Pages
#        run: |
#          mkdir gh-pages
#          cp -R target/site/serenity/* gh-pages/
#          cd gh-pages
#          git init
#          git config user.name "GitHub Actions"
#          git config user.email "actions@github.com"
#          git remote add origin https://github.com/${{ github.repository }}.git
#          git checkout -b gh-pages
#          git add .
#          git commit -m "Deploy Serenity reports"
#          git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages
#
#


